name: Backend CI/CD

on:
  push:
    branches: [master]
    paths:
      - "backend/**"
  pull_request:
    branches: [master]
    paths:
      - "backend/**"
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - staging

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest
    # Only deploy on push to master or manual trigger, but still run build/test for PRs
    env:
      DEPLOY: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/master' && contains(github.event.head_commit.message, '[deploy]')) || github.event_name == 'workflow_dispatch' }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.x"
          cache: "npm"
          cache-dependency-path: "./backend/package-lock.json"

      - name: Set version label
        id: version
        run: echo "version=$(date +'%Y%m%d%H%M%S')-${{ github.run_number }}" >> $GITHUB_OUTPUT

      - name: Set version description
        id: description
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B | head -n 1)
          SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)
          TRIGGER="${{ github.event_name }}"
          ACTOR="${{ github.actor }}"
          echo "description=[$SHORT_SHA] $COMMIT_MSG ($TRIGGER by $ACTOR)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npx eslint . --ext .ts

      - name: TypeScript Check
        run: npx tsc --noEmit

      - name: Build
        run: npm run build

      - name: Run tests
        run: npm test

      - name: Security audit
        run: npm audit --production || true

      # Create deployment package - only if we're deploying
      - name: Create deployment package
        if: env.DEPLOY == 'true'
        run: |
          # Prune to production dependencies (more efficient than reinstalling)
          npm prune --production

          # Create ZIP artifact directly
          zip -r backend-deploy.zip dist package.json package-lock.json .ebextensions Procfile node_modules .elasticbeanstalk/*.yml .elasticbeanstalk/*global.yml

      - name: Deploy to EB
        if: env.DEPLOY == 'true'
        uses: einaregilsson/beanstalk-deploy@v22
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: protein-explorer-backend
          environment_name: protein-explorer-backend
          version_label: ${{ steps.version.outputs.version }}
          version_description: ${{ steps.description.outputs.description }}
          region: ${{ secrets.AWS_DEFAULT_REGION }}
          deployment_package: ./backend/backend-deploy.zip
